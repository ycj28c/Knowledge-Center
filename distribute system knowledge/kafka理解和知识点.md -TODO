

https://www.zhihu.com/question/53331259/answer/242678597
老板有个好消息要告诉大家，有两个办法:
1.到每个座位上挨个儿告诉每个人。什么？张三去上厕所了？那张三就只能错过好消息了！ 2.老板把消息写到黑板报上，谁想知道就来看一下，什么？张三请假了？没关系，我一周之后才擦掉，总会看见的！什么张三请假两周？那就算了，我反正只保留一周，不然其他好消息没地方写了redis用第一种办法，kafka用第二种办法，知道什么区别了吧

https://www.youtube.com/watch?v=JUq1N8NClcg

01
```
Java的分为栈（线程和run的控制），堆（内存存放）和方法区（类的模板信息）。
Java的演化RMI(RPC) -> EJB -> Spring。
```

02
```
集群的演化，
1）负载均衡控制 
最初可以使用于负载均衡器，但是负载均衡服务器本身会达到性能上限。
2）注册中心
返回所有机器连接，只返回连接，用户来轮询服务器，将负载放在客户端，相关软件有zookeeper。
3）集群下的性能关系
多个服务器会影响机器性能，网络性能，要解耦分离为多个微服务。但是为了解决微服务之间的通信和单点性能问题，要加上一个消息总线来管理和分配信息。（kafka来了）
```

03
```
1）Apache Flume：海量日志采集传输框架
log数据一般通过socket传输给另外一个系统，可能需要flume来帮助传输，保证抵达，高可靠。source-channel-sink模式。
数据保存在内存，容易丢，不容易增加消费者，数据无法长时间保留。

重温hash的原理：
hashcode -> hash -> ? & 15 -> index 所以hash容量初始16，扩容必须是2倍数
分区的备份均摊算法就可以用这个算法。

额外阅读
对搭建日志系统而言，也没什么新花样，以下这些依样画葫芦就可以了：
1. 日志采集（Logstash/Flume，SDK wrapper）
2. 实时消费 (Storm, Flink, Spark Streaming)
3. 离线存储 （HDFS or Object Storage or NoSQL) +  离线分析（Presto，Hive，Hadoop）
4. 有一些场景可能需要搜索，可以加上ES或ELK

比如log->flume->kafka->hdfs(solr)
线上数据 -> flume -> kafka -> hdfs -> MR离线计算
线上数据 -> flume -> kafka -> storm
```