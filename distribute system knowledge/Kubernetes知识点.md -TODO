Google Kubernetes Engine (GKE)

看了这个教程，讲的很好：  
[【k8s】Kubernetes最新最细视频教程](https://www.youtube.com/watch?v=AgGlssUamTM&list=PLmOn9nNkQxJG2l1x9QgWkYSBg7VyjDj6o&index=1)  
下面的各集的笔记：

01 Kubernetes 前世今生(1)
```
Infrastructure as a service 阿里云
Platform as a service 新浪云 -> Docker
Software as a service Office365
```

02 Kubernetes 前世今生(2)
```
集群资源管理器的演化
Apache Mesos 古老
Docker Swarm 功能少
->
Kubernetes 领航员
来源于Google的Borg系统，使用Go语言编写
优点：轻量级，开源，弹性伸缩，负载均衡
```

03 Kubernetes 知识图谱(1)
04 Kubernetes 知识图谱(2)
```
总体介绍了一下
pod控制器：掌握各种控制器的特点以及使用定义方式
服务发现：掌握SVC原理及其构建方式
存储：掌握多种存储类型的特点，在不同环境选择合适的存储方案
调度器：掌握调度器原理，能够根据要求把Pod定义到想要的节点运行
安全：集群的认证，鉴权，访问控制原理和流程
HELM(Linux yum)：掌握HELM原理，模板自定义，部署常用插件
运维：修改Kubeadm达到证书可用10年，构建高可用k8s集群
```

05 Kubernetes 组件说明(1)
06 Kubernetes 组件说明(2)
```
高可用集群副本数据最好是>3的奇数个（便于投票）

Master部分：
包括Kubectl，scheduler，replication controller，api server和etcd（类似zookeeper做分布式强一致性）

Node部分：
包括Kubelet和Kube Proxy和Pod，
Pod里面安装container（就是Docker），当然容器不只是docker

API server：所有服务访问统一入口
Controller manager：维持副本期望数目
Scheduler：负责介绍人物，选择合适的节点进行分配任务
Etcd：键值对数据库，存储K8s集群所有重要信息（持久化）
Kubelet：直接跟容器引擎交互实现容器的生命周期管理
Kube-proxy：负责写入规则至IPTables，IPVS实现服务映射访问

CoreDNS：可以为及集群中的SVC创建一个域名IP的对应关系解析
Dashboard：给K8s集群提供一个B/S结构访问体系
Ingress Controller：官方只能实现4层代理，Ingree可以实现7层代理
Fedetation：提供一个可以跨集群中心多K8s统一管理功能
Prometheus：提供K8s集群的监控能力
ELK：提供K8s集群日志统一分析介入平台
```

07 Kubernetes Pod概念(1)
08 Kubernetes Pod概念(2)
```

```




